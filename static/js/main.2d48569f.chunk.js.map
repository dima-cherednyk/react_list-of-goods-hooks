{"version":3,"sources":["components/ProductList.tsx","App.tsx","index.tsx"],"names":["ProductList","products","useState","visibleButton","setVisibleButton","visibleListWithButtons","setVisibleListWithButtons","reverseList","setReverseList","sortBy","setSortBy","resetList","setResetList","filterList","setFilterList","copy","filter","product","length","sort","a","b","localeCompare","reverse","className","type","onClick","classNames","showElement","hideElement","map","name","onChange","event","currentTarget","value","current","goodsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"uQAQaA,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7C,EAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA4DF,oBAAS,GAArE,mBAAOG,EAAP,KAA+BC,EAA/B,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAAoCV,mBAAS,GAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KAmEMC,EAAOd,EAASe,QAAO,SAAAC,GAAO,OAAIA,EAAQC,QAAUL,KAmB1D,OAjBAE,EAAKI,MAAK,SAACC,EAAGC,GACZ,OAAQZ,GACN,IAAK,OACH,OAAOW,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEF,OAASG,EAAEH,OAEtB,QACE,OAAO,MAITX,GACFQ,EAAKQ,UAIL,sBAAKC,UAAU,4HAAf,UAIE,oBAAIA,UAAU,qCAAd,mBAEA,wBACEC,KAAK,SACLC,QA7FwC,WAC5CtB,GAAiB,WACf,OAAO,KAGTE,GAA0B,WACxB,OAAO,MAwFLkB,UAAWG,IACT,2CACA,CACEC,YAAazB,EACb0B,aAAc1B,IAPpB,mBAcA,sBACEqB,UAAWG,IACT,+BACA,CACEC,YAAavB,EACbwB,aAAcxB,IALpB,UASE,6BACGM,EACGV,EAAS6B,KAAI,SAAAb,GAAO,OACpB,6BAGGA,GAFIA,MAKPF,EAAKe,KAAI,SAAAb,GAAO,OAChB,6BAGGA,GAFIA,QAOb,sBAAKO,UAAU,mBAAf,UACE,yBACEO,KAAK,gBACLC,SA7HW,SAACC,GACpB,IAAMf,GAAUe,EAAMC,cAAcC,MAEpCrB,GAAc,WACZ,OAAOI,KAGTN,GAAa,WACX,OAAO,MAsHDuB,MAAOtB,EACPW,UAAU,SAJZ,UAME,wBAAQW,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,mBAGF,wBACEV,KAAK,SACLC,QAnIM,WACdlB,GAAe,SAAA4B,GAAO,OAAKA,KAC3BxB,GAAa,WACX,OAAO,MAiIDY,UAAU,2CAHZ,qBAQA,wBACEC,KAAK,SACLC,QApIS,WACjBhB,GAAU,WACR,MAAO,UAETE,GAAa,WACX,OAAO,MAgIDY,UAAU,2CAHZ,iCAQA,wBACEC,KAAK,SACLC,QAnIW,WACnBhB,GAAU,WACR,MAAO,YAETE,GAAa,WACX,OAAO,MA+HDY,UAAU,2CAHZ,4BAQA,wBACEC,KAAK,SACLC,QAlII,WACZd,GAAa,WACX,OAAO,KAGTJ,GAAe,WACb,OAAO,KAGTE,GAAU,WACR,MAAO,MAGTI,GAAc,WACZ,OAAO,MAqHDU,UAAU,2CAHZ,6BC3LJa,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASaC,EANO,kBACpB,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,CAAavB,SAAUoC,OChB3BE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d48569f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './ProductList.scss';\n\ntype Props = {\n  products: string[];\n};\n\nexport const ProductList: React.FC<Props> = ({ products }) => {\n  const [visibleButton, setVisibleButton] = useState(true);\n  const [visibleListWithButtons, setVisibleListWithButtons] = useState(false);\n  const [reverseList, setReverseList] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const [resetList, setResetList] = useState(false);\n  const [filterList, setFilterList] = useState(1);\n\n  const hideStartButtonAndShowListWithButtons = () => {\n    setVisibleButton(() => {\n      return false;\n    });\n\n    setVisibleListWithButtons(() => {\n      return true;\n    });\n  };\n\n  const filteredList = (event: React.FormEvent<HTMLSelectElement>) => {\n    const length = +event.currentTarget.value;\n\n    setFilterList(() => {\n      return length;\n    });\n\n    setResetList(() => {\n      return false;\n    });\n  };\n\n  const reverse = () => {\n    setReverseList(current => !current);\n    setResetList(() => {\n      return false;\n    });\n  };\n\n  const sortByName = () => {\n    setSortBy(() => {\n      return 'name';\n    });\n    setResetList(() => {\n      return false;\n    });\n  };\n\n  const sortByLength = () => {\n    setSortBy(() => {\n      return 'length';\n    });\n    setResetList(() => {\n      return false;\n    });\n  };\n\n  const reset = () => {\n    setResetList(() => {\n      return true;\n    });\n\n    setReverseList(() => {\n      return false;\n    });\n\n    setSortBy(() => {\n      return '';\n    });\n\n    setFilterList(() => {\n      return 1;\n    });\n  };\n\n  const copy = products.filter(product => product.length >= filterList);\n\n  copy.sort((a, b) => {\n    switch (sortBy) {\n      case 'name':\n        return a.localeCompare(b);\n\n      case 'length':\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (reverseList) {\n    copy.reverse();\n  }\n\n  return (\n    <div className=\"container has-background-success-light\n      is-flex is-flex-direction-column\n      is-justify-content-center is-align-content-center\"\n    >\n      <h1 className=\"title level-item has-text-centered\">Goods</h1>\n\n      <button\n        type=\"button\"\n        onClick={hideStartButtonAndShowListWithButtons}\n        className={classNames(\n          'button is-success is-outlined is-rounded',\n          {\n            showElement: visibleButton,\n            hideElement: !visibleButton,\n          },\n        )}\n      >\n        Start\n      </button>\n\n      <div\n        className={classNames(\n          'level-item has-text-centered',\n          {\n            showElement: visibleListWithButtons,\n            hideElement: !visibleListWithButtons,\n          },\n        )}\n      >\n        <ul>\n          {resetList\n            ? products.map(product => (\n              <li\n                key={product}\n              >\n                {product}\n              </li>\n            ))\n            : copy.map(product => (\n              <li\n                key={product}\n              >\n                {product}\n              </li>\n            ))}\n        </ul>\n\n        <div className=\"selectAndButtons\">\n          <select\n            name=\"productLength\"\n            onChange={filteredList}\n            value={filterList}\n            className=\"select\"\n          >\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n            <option value=\"10\">10</option>\n          </select>\n\n          <button\n            type=\"button\"\n            onClick={reverse}\n            className=\"button is-success is-outlined is-rounded\"\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={sortByName}\n            className=\"button is-success is-outlined is-rounded\"\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={sortByLength}\n            className=\"button is-success is-outlined is-rounded\"\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={reset}\n            className=\"button is-success is-outlined is-rounded\"\n          >\n            Reset\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { ProductList } from './components/ProductList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <ProductList products={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}